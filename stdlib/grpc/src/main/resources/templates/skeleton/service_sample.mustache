import ballerina/grpc;
{{#if enableEp}}
listener grpc:Listener ep = new (9090);
{{/if}}
service {{serviceName}} on ep {
{{#streamingFunctions}}
    resource function {{methodName}}(grpc:Caller caller, stream<{{#isNotNull inputType}}{{inputType}}{{/isNotNull}}
    {{~#isNull inputType}}record {}{{/isNull}},error> clientStream) {
        // Implementation goes here.

        // You should return a {{outputType}}
    }{{/streamingFunctions}}{{#unaryFunctions}}
    resource function {{methodName}}(grpc:Caller caller{{#isNotNull inputType}}, {{inputType}} value{{/isNotNull}}) {
        // Implementation goes here.

        // You should return a {{outputType}}
    }{{/unaryFunctions}}
}

{{#each messageMap}}{{> message}}{{/each}}
{{#enumList}}{{> enum}}{{/enumList}}{{#if rootDescriptor}}
const string ROOT_DESCRIPTOR = "{{rootDescriptor}}";
function getDescriptorMap() returns map<string> {
    return {
        {{#each descriptors}}"{{descriptorKey}}":"{{descriptorData}}"{{#unless @last}},{{/unless}}
        {{/each}}
    };
}{{/if}}
